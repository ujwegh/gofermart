{
    "swagger": "2.0",
    "info": {
        "description": "This is a `gophermart` service. It allows users to create orders, credit/debit their wallets and withdraw funds from their wallets using the accrual service.",
        "title": "Swagger Docs for Gophermart API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Nikita Aleksandrov",
            "email": "nik29200018@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/user",
    "paths": {
        "/api/user/balance": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "The handler returns the current amount of loyalty points and the total amount of points",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Getting the user's current balance",
                "responses": {
                    "200": {
                        "description": "Current and withdrawn loyalty points",
                        "schema": {
                            "$ref": "#/definitions/handlers.BalanceDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - The user is not authorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/balance/withdraw": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "The handler allows an authorized user to debit points from their account for a hypothetical new order.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Request for debiting funds",
                "parameters": [
                    {
                        "description": "Withdrawal Request",
                        "name": "withdrawal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.WithdrawRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful processing of the request"
                    },
                    "400": {
                        "description": "Bad Request - Unable to read body or parse body",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - The user is not authorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "402": {
                        "description": "Payment Required - Insufficient funds in the account",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Incorrect order number format",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "description": "Authenticates a user using a login/password pair and returns a bearer token if successful.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "User Login Credentials",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UserLoginDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bearer \u003ctoken\u003e",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Unable to read body or parse body or login and password are required",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid login credentials",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Unable to generate token",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/orders": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "The handler returns a list of order numbers sorted by loading time from oldest to newest for an authorized user.\nThe response includes the order number, status, accrual (if available), and the upload timestamp.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Getting a list of downloaded order numbers",
                "responses": {
                    "200": {
                        "description": "List of orders with details",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.OrderDTO"
                            }
                        }
                    },
                    "204": {
                        "description": "No orders to display"
                    },
                    "401": {
                        "description": "Unauthorized - The user is not authorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "The handler is only available to authenticated users and is used to upload a new order number.",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Loading order number",
                "parameters": [
                    {
                        "description": "Order Number",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The order number has already been uploaded by this user"
                    },
                    "202": {
                        "description": "The new order number has been accepted for processing"
                    },
                    "400": {
                        "description": "Bad Request - Unable to read body or incorrect request format",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - The user is not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict - The order number has already been uploaded by another user",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Incorrect order number format",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/register": {
            "post": {
                "description": "Registration is carried out using a login/password pair. Each login must be unique.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "User registration",
                "parameters": [
                    {
                        "description": "User Registration Information",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UserRegisterDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bearer \u003ctoken\u003e",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/withdrawals": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "The handler returns information about the withdrawal of funds,",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "withdrawals"
                ],
                "summary": "Receiving information about the withdrawal of funds",
                "responses": {
                    "200": {
                        "description": "List of withdrawals with details",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.WithdrawalDTO"
                            }
                        }
                    },
                    "204": {
                        "description": "No withdrawals to display"
                    },
                    "401": {
                        "description": "Unauthorized - The user is not authorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.BalanceDto": {
            "type": "object",
            "properties": {
                "current": {
                    "type": "number"
                },
                "withdrawn": {
                    "type": "number"
                }
            }
        },
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handlers.OrderDTO": {
            "type": "object",
            "properties": {
                "accrual": {
                    "type": "number"
                },
                "number": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "uploaded_at": {
                    "type": "string"
                }
            }
        },
        "handlers.UserLoginDto": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handlers.UserRegisterDto": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handlers.WithdrawRequestDTO": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "string"
                },
                "sum": {
                    "type": "number"
                }
            }
        },
        "handlers.WithdrawalDTO": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "string"
                },
                "processed_at": {
                    "type": "string"
                },
                "sum": {
                    "type": "number"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}